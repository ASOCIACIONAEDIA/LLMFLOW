version: '3.8'

services:
  # Test PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: insights_test_postgres
    environment:
      POSTGRES_DB: test_insights
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_pass
    volumes:
      - test_postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d test_insights"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Test Redis
  redis:
    image: redis:7-alpine
    container_name: insights_test_redis
    command: redis-server --save ""
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Test Runner
  test-runner:
    build:
      context: .
      target: testing
    container_name: insights_test_runner
    environment:
      - ENV=test
      - DEBUG=false
      - DB_URL=postgresql+asyncpg://test_user:test_pass@postgres:5432/test_insights
      - REDIS_URL=redis://redis:6379/1
      - JWT_SECRET_KEY=test-secret-key-for-ci
      - SMTP_HOST=
      - SMTP_PORT=587
      - SMTP_USER=
      - SMTP_PASSWORD=
    volumes:
      - ./app:/app/app
      - ./tests:/app/tests
      - ./htmlcov:/app/htmlcov
      - ./reports:/app/reports
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - test_network

volumes:
  test_postgres_data:

networks:
  test_network:
    driver: bridge
