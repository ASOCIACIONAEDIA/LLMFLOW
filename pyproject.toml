[project]
name = "insights-api"
version = "1.0.0"
description = "Analytics Backend API with PostgreSQL and Redis"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
readme = "README.md"
requires-python = ">=3.11"

dependencies = [
    # FastAPI and web server
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "gunicorn>=21.2.0",
    
    # Database
    "sqlalchemy[asyncio]>=2.0.23",
    "asyncpg>=0.29.0",
    "alembic>=1.12.1",
    "pgvector>=0.3.0",
    
    # Redis and background jobs
    "redis[hiredis]>=5.0.1",
    "arq>=0.25.0",
    
    # Authentication and security - ENHANCED
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "bcrypt>=4.0.0,<4.1.0",
    "python-multipart>=0.0.6",
    "pyjwt>=2.8.0",  # Added for JWT handling
    
    # Configuration and validation
    "pydantic>=2.5.0",
    "pydantic[email]>=2.11.7",
    "pydantic-settings>=2.1.0",
    
    # Email and notifications - ENHANCED
    "emails>=0.6.0",
    "jinja2>=3.1.2",  # Added for email templates
    
    # Utilities
    "python-json-logger>=2.0.7",
    "loguru>=0.7.2",
    "httpx>=0.25.2",
    
    # Data management
    "openai>=1.104.2"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "pytest-html>=4.1.1",  # Added for HTML test reports
    "pytest-mock>=3.12.0",  # Added for mocking
    "pytest-watch>=4.2.0",  # Added for watch mode
    "pytest-testmon>=2.1.1",  # Added for smart test selection
    "httpx>=0.25.2",
    "black>=23.11.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.7.1",
    "factory-boy>=3.3.0",  # Added for test factories
]

monitoring = [
    "prometheus-client>=0.19.0",
    "flower>=2.0.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "pytest-html>=4.1.1",
    "pytest-mock>=3.12.0",
    "pytest-watch>=4.2.0",
    "pytest-testmon>=2.1.1",
    "httpx>=0.25.2",
    "black>=23.11.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.7.1",
    "factory-boy>=3.3.0",
]

[tool.black]
line-length = 120
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--cov-report=term-missing",
    "--cov-fail-under=70",
]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"  # ADD THIS LINE
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "e2e: End-to-end tests",
    "slow: Slow running tests",
    "auth: Authentication related tests",
    "security: Security related tests",
    "asyncio: async tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError", 
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.hatch.build.targets.sdist]
include = [
    "/app",
    "/README.md",
    "/pyproject.toml"
]
